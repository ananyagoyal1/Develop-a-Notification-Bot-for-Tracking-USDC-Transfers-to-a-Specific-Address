require('dotenv').config();
const { ethers } = require('ethers');
const axios = require('axios');

// USDC Contract ABI (minimal version)
const usdcABI = [
  "event Transfer(address indexed from, address indexed to, uint256 value)"
];

// USDC Contract Address
const USDC_CONTRACT_ADDRESS = '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48';

async function main() {
  try {
    // Alchemy Provider
    const provider = new ethers.providers.WebSocketProvider(process.env.ALCHEMY_API_URL);

    // USDC Contract
    const usdcContract = new ethers.Contract(USDC_CONTRACT_ADDRESS, usdcABI, provider);

    // Tracked Address
    const TRACKED_ADDRESS = process.env.TRACKED_ADDRESS;

    // Listen for Transfer events
    usdcContract.on('Transfer', async (from, to, value, event) => {
      // Check if the transfer is to the tracked address
      if (to.toLowerCase() === TRACKED_ADDRESS.toLowerCase()) {
        const formattedValue = ethers.utils.formatUnits(value, 6); // USDC has 6 decimals
        
        // Send Discord Notification
        await sendDiscordNotification(from, to, formattedValue);
      }
    });

    console.log(`Monitoring USDC transfers to ${TRACKED_ADDRESS}`);
  } catch (error) {
    console.error('Error in main function:', error);
  }
}

async function sendDiscordNotification(from, to, amount) {
  try {
    await axios.post(process.env.DISCORD_WEBHOOK_URL, {
      content: `ðŸš¨ USDC Transfer Detected!
      From: ${from}
      To: ${to}
      Amount: ${amount} USDC`
    });
  } catch (error) {
    console.error('Discord notification error:', error);
  }
}

main().catch(console.error);